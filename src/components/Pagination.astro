---
interface Props extends astroHTML.JSX.HTMLAttributes {
    index?: number
    current?: number
    total?: number
}
let { index = NaN, current = NaN, total = 0, ...attrs } = Astro.props

const pages = Array.from({ length: total }, (_, i) => i + 1)
---

<script>
    window.addEventListener("click", e => {
        const target = e.target as HTMLElement | null
        if (target?.tagName === "UI5-BUTTON") {
            target.parentElement?.dispatchEvent(
                new CustomEvent<number>("page-to", {
                    detail: Number.parseInt(target.dataset.to as string),
                })
            )
        }
    })
</script>
<span {...attrs}>
    <ui5-button
        design="Emphasized"
        icon="navigation-left-arrow"
        disabled={total == 0 || index == 0}
        data-to={current - 1}
    >
    </ui5-button>
    {
        pages.map(p => {
            if (p === current)
                return (
                    <ui5-button design="Emphasized" disabled>
                        {p}
                    </ui5-button>
                )
            if (
                total < 8 ||
                Math.abs(p - current) <
                    Math.max(
                        pages.at(5)! - current,
                        current - pages.at(-6)!,
                        2
                    ) ||
                (p == pages.at(1) && current == pages.at(3)) ||
                (p == pages.at(-2) && current == pages.at(-4))
            )
                return (
                    <ui5-button design="Default" data-to={p}>
                        {p}
                    </ui5-button>
                )
            if (p === pages.at(0))
                return (
                    <ui5-button design="Default" data-to="1">
                        1
                    </ui5-button>
                )
            if (p === pages.at(-1))
                return (
                    <ui5-button design="Default" data-to={p}>
                        {p}
                    </ui5-button>
                )
            if (p === pages.at(1))
                return (
                    <ui5-button design="Transparent" disabled>
                        ...
                    </ui5-button>
                )
            if (p === pages.at(-2))
                return (
                    <ui5-button design="Transparent" disabled>
                        ...
                    </ui5-button>
                )
        })
    }
    <ui5-button
        design="Emphasized"
        icon="navigation-right-arrow"
        disabled={total == 0 || current == total}
        data-to={current + 1}
    >
    </ui5-button>
</span>
<style>
    span {
        display: inline-flex;
        gap: 4px;
    }
</style>
