---
interface Props extends astroHTML.JSX.HTMLAttributes {
    index?: number
    current?: number
    total?: number
}
let { index = NaN, current = NaN, total = 0, ...attrs } = Astro.props
index ||= current - 1 || 0
current ||= index + 1 || 1
const index_from_end = total - current
---

<script>
    window.addEventListener("click", e => {
        const target = e.target as HTMLElement | null
        if (target?.tagName === "UI5-BUTTON") {
            target.parentElement?.dispatchEvent(
                new CustomEvent<number>("page-to", {
                    detail: Number.parseInt(target.dataset.to as string) + 1,
                })
            )
        }
    })
</script>
<span {...attrs}>
    <ui5-button
        design="Emphasized"
        icon="navigation-left-arrow"
        disabled={total == 0 || index == 0}
        data-to={index - 1}
    >
    </ui5-button>
    {
        Array(total)
            .fill(null)
            .map((n, i) => {
                if (i === index)
                    return (
                        <ui5-button design="Emphasized" disabled>
                            {i + 1}
                        </ui5-button>
                    )
                if (
                    total < 8 ||
                    Math.abs(i - index) <
                        Math.max(5 - index, 5 - index_from_end, 2) ||
                    (i == 1 && index == 3) ||
                    (i == total - 2 && index_from_end == 3)
                )
                    return (
                        <ui5-button design="Default" data-to={i}>
                            {i + 1}
                        </ui5-button>
                    )
                if (i === 0)
                    return (
                        <ui5-button design="Default" data-to="0">
                            1
                        </ui5-button>
                    )
                if (i === total - 1)
                    return (
                        <ui5-button design="Default" data-to={i}>
                            {total}
                        </ui5-button>
                    )
                if (i === 1)
                    return (
                        <ui5-button design="Transparent" disabled>
                            ...
                        </ui5-button>
                    )
                if (i === total - 2)
                    return (
                        <ui5-button design="Transparent" disabled>
                            ...
                        </ui5-button>
                    )
            })
    }
    <ui5-button
        design="Emphasized"
        icon="navigation-right-arrow"
        disabled={total == 0 || current == total}
        data-to={index + 1}
    >
    </ui5-button>
</span>
<style>
    span {
        display: inline-flex;
        gap: 4px;
    }
</style>
